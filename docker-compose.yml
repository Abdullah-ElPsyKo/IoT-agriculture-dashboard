version: '3.3'

services:
  backend:
    build: ./BACKEND
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://user:password@db/yourdbname
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`s140639.devops-ap.be`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"
      - "traefik.docker.network=web"
    depends_on:
      - db
    volumes:
      - ./BACKEND:/app
    networks:
      - web

  frontend:
    build:
      context: ./FRONTEND
      dockerfile: Dockerfile
    ports:
      - "8080:80"  # Change to "8080:80" to avoid conflict
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`s140639.devops-ap.be`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.docker.network=web"
    networks:
      - web

  db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: yourdbname
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - web

volumes:
  pgdata:

networks:
  web:
    external: true
